@model ElCaptain.Models.VehicleOwnerDto
@{
    Layout = null;
}

<!DOCTYPE html>
<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>

@using (Html.BeginForm("AddEditVehicleOwner", "VehicleOwner", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="container PanelContainer" style="width:650px;">
        <div class="panel panel-primary">
            <div class="panel-heading">بيانات مالك المركبة</div>
            <div class="panel-body">


                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <img class="lazyload NO-CACHE" src="@Url.Content(@Model.Link + @Model.Id + ".jpg")" style="height:300px;width:100%;" id="imagePreview" />
                            <input type="file" name="ImageUpload" accept="image/jpeg,image/png,image/jpg" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                            @Html.ValidationMessageFor(model => model.ImageUpload)
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <img class="lazyload NO-CACHE" src="@Url.Content(@Model.Link2 + @Model.Id + ".jpg")" style="height:300px;width:100%;" id="imagePreview2" />
                            <input type="file" name="ImageUpload" accept="image/jpeg,image/png,image/jpg" onchange="ShowImagePreview(this, document.getElementById('imagePreview2'))" />
                            @Html.ValidationMessageFor(model => model.ImageUpload2)
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", autofocus = "autofocus" } })
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>
                    </div>
                </div>


                <div class="row" id="incomeRow">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.Category
                           , new { @class = "form-control", role = "menu", datatoggle = "dropdown", @id = "GovernemntDropDown" })
                            @Html.ValidationMessageFor(model => model.Category)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Phone, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.Phone)
                        </div>
                    </div>
                </div>




                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NationalId, new { @class = "control-label" })
                            @Html.EditorFor(model => model.NationalId, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                            @Html.ValidationMessageFor(model => model.NationalId)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.isActive, new { @class = "control-label" })
                            @Html.EditorFor(model => model.isActive, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.isActive)
                        </div>
                    </div>
                </div>




                <div class="form-group">
                    @{
                        if (Model.Id == 0)
                        {
                            <input type="submit" value="اضافة" class="btn btn-success" style="width:100%" />
                        }
                        else
                        {
                            <input type="submit" value="تعديل" class="btn btn-success" style="width:100%" />
                        }
                    }
                </div>


            </div>
        </div>
    </div>
                        }

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>$.validator.setDefaults({ onkeyup: false });</script>


<script>
    $(document).ready(function () {
        $('.NO-CACHE').attr('src', function () { return $(this).attr('src') + "?a=" + Math.random() });
    });
</script>


<script>
    DropDownSuggestions('GovernemntDropDown');



    $(function () {
        $('#Username').rules().remote.complete = function (xhr) {
            if (xhr.status == 200 && xhr.responseText === 'true') {
                // validation succeeded => we fetch the id that
                // was sent from the server
                var id = xhr.getResponseHeader('username');

                // and of course we do something useful with this id
                $('#Username').addClass('input-validation-success');
            }
        };
    });
</script>

