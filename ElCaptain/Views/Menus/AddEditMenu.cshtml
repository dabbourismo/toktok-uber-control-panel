@model ElCaptain.Models.MenuDto
@{
    Layout = null;
}

<!DOCTYPE html>
<head>
    <link href="~/Content/Site.css" rel="stylesheet" />
</head>

@using (Html.BeginForm("AddEditMenu", "Menus", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitFormWithImage(this);" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="container PanelContainer" style="width:450px;">
        <div class="panel panel-primary">
            <div class="panel-heading">بيانات المنيو</div>
            <div class="panel-body">

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            <img class="lazyload NO-CACHE" src="@Url.Content(@Model.Link + @Model.Id + ".jpg")" style="height:300px;width:100%;" id="imagePreview" />
                            <input type="file" name="ImageUpload" accept="image/jpeg,image/png,image/jpg" onchange="ShowImagePreview(this, document.getElementById('imagePreview'))" />
                            @Html.ValidationMessageFor(model => model.ImageUpload)
                        </div>
                    </div>

                </div>


                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, new { @class = "control-label" })
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.isOffered, new { @class = "control-label" })
                            @Html.EditorFor(model => model.isOffered, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.isOffered)
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.StoresDropDownList, new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.StoreId, Model.StoresDropDownList,
                           new { @class = "form-control", role = "menu", datatoggle = "dropdown", id = "ProductDropDown" })
                            @Html.ValidationMessageFor(model => model.StoresDropDownList)
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    @{
                        if (Model.Id == 0)
                        {
                            <input type="submit" value="اضافة" class="btn btn-success" style="width:100%" />
                        }
                        else
                        {
                            <input type="submit" value="تعديل" class="btn btn-success" style="width:100%" />
                        }
                    }
                </div>


            </div>
        </div>
    </div>
                        }


<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>$.validator.setDefaults({ onkeyup: false });</script>

<script>
    $(document).ready(function () {
        $('.NO-CACHE').attr('src', function () { return $(this).attr('src') + "?a=" + Math.random() });
    });
    DropDownSuggestions('ProductDropDown');
</script>
